.comment id="#{comment.id}"
	.avatar
		= image_tag comment.user.avatar.url, style: "width:86px; height:86px;"
	.content
		.header-comment-content
			.name-user
				= first_and_last_name comment.user
			.datetime
				= created_at_article comment
		.body
			= comment.content
		= link_to "Ответить", new_comment_responses_path(comment), remote: true if can? :create, Comment
	.responses
		= render comment.responses unless comment.responses.empty?
	/ .responseco
	/ 	.avatar
	/ 			= image_tag current_user.avatar.url, style: "width:86px; height:86px;"
	/ 	.content
	/ 		.header-comment-content
	/ 			.name-user
	/ 				= first_and_last_name comment.user
	/ 			.datetime
	/ 				= created_at_article comment
	/ 		.body
	/ 			= comment.content


/ = comment.content
/ td = comment.user.email
/ td = form_for [comment, comment.responses.new] do |f|
/   = f.text_field :content	
/   = f.submit class: "btn btn-primary"
/ - unless comment.responses.empty?
/ 	table
/ 		- comment.responses.each do |response|
/ 			tr
/ 				td 
/ 					= response.content
/ td = link_to 'Destroy', [comment.article, comment], data: { confirm: 'Are you sure?' }, method: :delete if can?(:destroy, comment)